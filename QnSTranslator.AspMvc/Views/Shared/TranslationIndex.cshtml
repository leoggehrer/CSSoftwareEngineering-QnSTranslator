@using Microsoft.AspNetCore.Mvc.Razor
@using QnSTranslator.AspMvc.Extensions
@using QnSTranslator.AspMvc.Modules.Session
@model QnSTranslator.AspMvc.Models.Modules.Language.TranslationResult
@*Begin:Header*@
@{
#if DEBUG
    string currentView = ((RazorView)ViewContext.View).Path;
    string beginLabel = $"<!--View Begin: '{currentView}'-->";
    @Html.Raw(beginLabel)
#endif
    SessionWrapper sessionWrapper = new SessionWrapper(Context.Session);
    Func<string, string> translate = sessionWrapper.Translate;
}
@*End:Header*@

@{
    string controller = ViewContext.RouteData.Values["controller"].ToString();
    Func<string, string> translateFor = pn => translate($"Translator.{pn}");
    string title = translate("Translator");
    string appName = sessionWrapper.GetStringValue(nameof(appName), "*");
    string page = sessionWrapper.GetStringValue(nameof(page), "A");
    var appNameOptions = Model.AppNames.Select(i => new KeyValuePair<string, string>(i.Value, i.Value));

    ViewData["Title"] = title;
}

<h1>@title</h1>

@if (sessionWrapper.IsAuthenticated)
{
    <div class="d-flex bg-transparent">
        <div class="mr-auto p-sm-2">
            <a asp-action="Create" asp-controller="Translation" class="btn btn-outline-secondary">@translateFor("Create New")</a>
        </div>
        <div class="p-sm-2">
            <a asp-action="Export" asp-controller="Translation" class="btn btn-outline-secondary">@translateFor("Export")</a>
        </div>
        <div class="p-sm-2">
            <a asp-action="Import" asp-controller="Translation" class="btn btn-outline-primary">@translateFor("Import")</a>
        </div>
    </div>
}
<p></p>
@{
    char chrStart = 'A', chrEnd = 'Z';
    <div class="d-flex justify-content-center">
        @for (char chrRun = chrStart; chrRun <= chrEnd; chrRun++)
        {
            string strRun = Char.ToString(chrRun);
            string hRef = $"/Home/IndexBy?appName={appName}&page={chrRun}";

            if (chrRun.ToString().Equals(page))
            {
                <div class="p-sm-0"><a class="page-link" style="background-color: lightgray;" href="@hRef">@strRun</a></div>
            }
            else
            {
                <div class="p-sm-0"><a class="page-link" href="@hRef">@strRun</a></div>
            }
        }

        @if (page.Equals("*"))
        {
            string hRef = $"/Home/IndexBy?appName={appName}&page=*";

            <div class="p-0" style="margin-left: 10px;"><a class="page-link" style="background-color: lightgray;" href="@hRef">@translateFor("All")</a></div>
        }
        else
        {
            string hRef = $"/Home/IndexBy?appName={appName}&page=*";

            <div class="p-0" style="margin-left: 10px;"><a class="page-link" href="@hRef">@translateFor("All")</a></div>
        }
    </div>
}
<p></p>
<table class="table">
    <thead>
        <tr>
            <th>
                <div class="dropdown">
                    <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-toggle="dropdown">
                        @appName
                    </button>
                    <div class="dropdown-menu">
                        @foreach (var item in appNameOptions)
                        {
                            string hRef = $"/Home/IndexBy?appName={item.Value}&page={page}";

                            <a class="dropdown-item" href="@hRef">@item.Value</a>
                        }
                    </div>
                </div>
            </th>
            <th>
                @translateFor(nameof(QnSTranslator.AspMvc.Models.Persistence.Language.Translation.KeyLanguage))
            </th>
            <th>
                @translateFor(nameof(QnSTranslator.AspMvc.Models.Persistence.Language.Translation.Key))
            </th>
            <th>
                @translateFor(nameof(QnSTranslator.AspMvc.Models.Persistence.Language.Translation.ValueLanguage))
            </th>
            <th>
                @translateFor(nameof(QnSTranslator.AspMvc.Models.Persistence.Language.Translation.Value))
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Models)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AppName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.KeyLanguage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Key)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ValueLanguage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Value)
                </td>
                <td>
                    @if (sessionWrapper.IsAuthenticated)
                    {
                        @Html.ActionLink(translateFor("Edit"), "Edit", "Translation", new { id = item.Id })
                        <span>|</span>
                        @Html.ActionLink(translateFor("Delete"), "Delete", "Translation", new { id = item.Id });
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@*Begin:Footer*@
@{
#if DEBUG
    string endLabel = $"<!--View Ende: '{currentView}'-->";

    @Html.Raw(endLabel)
#endif
}
@*End:Footer*@
